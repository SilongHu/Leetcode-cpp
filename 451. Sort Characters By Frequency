class Solution {
public:
    string frequencySort(string s) {
        if (s.length() < 3 ) return s;
        unordered_map<char,int> hash;
        for(int i=0; i< s.length(); i++){
            hash[s[i]]++;
        }
        
        std::vector<std::pair<int,char>> items;
        auto it = hash.begin();
        while(it!=hash.end()){
            items.push_back(std::make_pair(it->second,it->first));
            it++;
        }

        std::sort(items.begin(), items.end());
        string result;
        
        for (int i = items.size()-1; i > -1; i--) {
            //std::string str(items[i].second);
            while(items[i].first > 0){
                result.push_back(items[i].second);
                items[i].first--;
            }
        }
        return result;
        
    }

};
